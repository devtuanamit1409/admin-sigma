{"version":3,"file":"static/js/2679.fb3bc7e2.chunk.js","mappings":"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","sources":["app/views/sessions/JwtLogin.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Card, Grid, TextField, Box, styled, useTheme } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\n// STYLED COMPONENTS\nconst FlexBox = styled(Box)(() => ({\n  display: \"flex\",\n}));\n\nconst ContentBox = styled(\"div\")(() => ({\n  height: \"100%\",\n  padding: \"32px\",\n  position: \"relative\",\n  background: \"rgba(0, 0, 0, 0.01)\",\n}));\n\nconst StyledRoot = styled(\"div\")(() => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor: \"#1A2038\",\n  minHeight: \"100% !important\",\n  \"& .card\": {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: \"1rem\",\n    display: \"flex\",\n    borderRadius: 12,\n    alignItems: \"center\",\n  },\n\n  \".img-wrapper\": {\n    height: \"100%\",\n    minWidth: 320,\n    display: \"flex\",\n    padding: \"2rem\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  email: Yup.string()\n    .email(\"Invalid Email address\")\n    .required(\"Email is required!\"),\n});\n\nexport default function JwtLogin() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await fetch(\"https://demo-sigma.site/api/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || \"Đăng nhập thất bại\");\n        return;\n      }\n      if (response.ok && data.user.isAdmin) {\n        localStorage.setItem(\"token\", data.token);\n        navigate(\"/dashboard/default\");\n      } else if (!data.user.isAdmin) {\n        throw new Error(\"Đăng nhập thất bại! Bạn không có quyền truy cập\");\n      } else {\n        throw new Error(data.message || \"Đăng nhập thất bại\");\n      }\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <StyledRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <div className=\"img-wrapper\">\n              <img src=\"/assets/images/logo-main.png\" width=\"100%\" alt=\"\" />\n            </div>\n          </Grid>\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Formik\n                initialValues={{ email: \"\", password: \"\" }}\n                onSubmit={(values) => login(values.email, values.password)}\n                validationSchema={validationSchema}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                      error={touched.email && Boolean(errors.email)}\n                      helperText={touched.email && errors.email}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.password}\n                      error={touched.password && Boolean(errors.password)}\n                      helperText={touched.password && errors.password}\n                      sx={{ mb: 1.5 }}\n                    />\n                    <FlexBox justifyContent=\"space-between\">\n                      <FlexBox gap={1}></FlexBox>\n                      <NavLink\n                        to=\"/session/forgot-password\"\n                        style={{ color: theme.palette.primary.main }}\n                      >\n                        Quên mật khẩu?\n                      </NavLink>\n                    </FlexBox>\n                    <LoadingButton\n                      fullWidth\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}\n                    >\n                      Đăng nhập\n                    </LoadingButton>\n                    {error && (\n                      <div style={{ color: \"red\", marginTop: 10 }}>{error}</div>\n                    )}\n                  </form>\n                )}\n              </Formik>\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </StyledRoot>\n  );\n}\n"],"names":["FlexBox","styled","Box","display","ContentBox","height","padding","position","background","StyledRoot","alignItems","justifyContent","backgroundColor","minHeight","maxWidth","margin","borderRadius","minWidth","validationSchema","Yup","shape","password","min","required","email","JwtLogin","theme","useTheme","navigate","useNavigate","loading","setLoading","useState","error","setError","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","src","width","alt","Formik","initialValues","onSubmit","values","async","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","user","isAdmin","Error","localStorage","setItem","token","e","login","_ref","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onChange","onBlur","value","Boolean","helperText","sx","mb","gap","NavLink","to","style","color","palette","primary","main","LoadingButton","my","marginTop"],"sourceRoot":""}
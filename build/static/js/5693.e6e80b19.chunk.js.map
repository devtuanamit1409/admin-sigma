{"version":3,"file":"static/js/5693.e6e80b19.chunk.js","mappings":"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","sources":["app/views/sessions/JwtRegister.jsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Card, Checkbox, Grid, TextField, useTheme, Box, styled } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport * as Yup from \"yup\";\n\nimport useAuth from \"app/hooks/useAuth\";\nimport { Paragraph } from \"app/components/Typography\";\n\n// STYLED COMPONENTS\nconst FlexBox = styled(Box)(() => ({\n  display: \"flex\",\n  alignItems: \"center\"\n}));\n\nconst JustifyBox = styled(FlexBox)(() => ({\n  justifyContent: \"center\"\n}));\n\nconst ContentBox = styled(JustifyBox)(() => ({\n  height: \"100%\",\n  padding: \"32px\",\n  background: \"rgba(0, 0, 0, 0.01)\"\n}));\n\nconst JWTRegister = styled(JustifyBox)(() => ({\n  background: \"#1A2038\",\n  minHeight: \"100vh !important\",\n  \"& .card\": {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: \"1rem\",\n    display: \"flex\",\n    borderRadius: 12,\n    alignItems: \"center\"\n  }\n}));\n\n// initial login credentials\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  username: \"\",\n  remember: true\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\n});\n\nexport default function JwtRegister() {\n  const theme = useTheme();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const handleFormSubmit = (values) => {\n    setLoading(true);\n\n    try {\n      register(values.email, values.username, values.password);\n      navigate(\"/\");\n      setLoading(false);\n    } catch (e) {\n      console.log(e);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <JWTRegister>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <img\n                width=\"100%\"\n                alt=\"Register\"\n                src=\"/assets/images/illustrations/posting_photo.svg\"\n              />\n            </ContentBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <Box p={4} height=\"100%\">\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}>\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"text\"\n                      name=\"username\"\n                      label=\"Username\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.username}\n                      onChange={handleChange}\n                      helperText={touched.username && errors.username}\n                      error={Boolean(errors.username && touched.username)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 2 }}\n                    />\n\n                    <FlexBox gap={1} alignItems=\"center\">\n                      <Checkbox\n                        size=\"small\"\n                        name=\"remember\"\n                        onChange={handleChange}\n                        checked={values.remember}\n                        sx={{ padding: 0 }}\n                      />\n\n                      <Paragraph fontSize={13}>\n                        I have read and agree to the terms of service.\n                      </Paragraph>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ mb: 2, mt: 3 }}>\n                      Register\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Already have an account?\n                      <NavLink\n                        to=\"/session/signin\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}>\n                        Login\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRegister>\n  );\n}\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","background","JWTRegister","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","username","remember","validationSchema","Yup","shape","min","required","JwtRegister","theme","useTheme","register","useAuth","navigate","useNavigate","loading","setLoading","useState","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","width","alt","src","p","Formik","onSubmit","values","e","console","log","_ref","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","Checkbox","checked","Paragraph","fontSize","LoadingButton","color","mt","NavLink","to","style","palette","primary","main","marginLeft","createSvgIcon","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","indeterminate","concat","capitalize","_extends","vars","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","edge","marginRight","SwitchBaseInput","cursor","position","opacity","top","left","zIndex","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","id","inputRef","onFocus","readOnly","tabIndex","setCheckedState","useControlled","controlled","default","state","muiFormControl","useFormControl","hasLabelFor","input","component","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}
{"version":3,"file":"static/js/1121.cb59f7e8.chunk.js","mappings":"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","sources":["app/views/dashboard/products/Edit.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport {\n  Button,\n  Box,\n  Stack,\n  IconButton,\n  TextField,\n  MenuItem,\n  Input,\n  Typography,\n  Grid,\n  FormControlLabel,\n  Switch,\n  Chip,\n  Select,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { useParams } from \"react-router-dom\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { Label, PhotoCamera } from \"@mui/icons-material\";\nimport axios from \"axios\";\nconst Edit = () => {\n  const style = {\n    p: 4,\n  };\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState({});\n\n  const getData = async () => {\n    try {\n      // Sử dụng Promise.all để gửi các request một cách song song\n      const [resBrand, resCategory, resCollection, resFragranceNote] =\n        await Promise.all([\n          axios.get(\"https://demo-sigma.site/api/brand\"),\n          axios.get(\"https://demo-sigma.site/api/category\"),\n          axios.get(\"https://demo-sigma.site/api/collection\"),\n          axios.get(\"https://demo-sigma.site/api/fragrancenote\"),\n        ]);\n\n      // Xử lý dữ liệu sau khi tất cả các request đã hoàn thành\n      const brandData = resBrand.data;\n      const categoryData = resCategory.data;\n      const collectionData = resCollection.data;\n      const fragranceNoteData = resFragranceNote.data;\n\n      // Set các dữ liệu state cùng lúc\n      // Ví dụ:\n      setState({\n        brandData,\n        categoryData,\n        collectionData,\n        fragranceNoteData,\n      });\n    } catch (error) {\n      // Xử lý lỗi nếu có\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const [productForm, setProductForm] = useState({\n    name: \"\",\n    category: \"\",\n    brand: \"\",\n    collectionProduct: \"\",\n    gender: \"\",\n    scent: \"\",\n    style: \"\",\n    topNotes: [],\n    middleNotes: [],\n    baseNotes: [],\n    description: \"\",\n    year: \"\",\n    origin: \"\",\n    discountPercent: 0,\n    sizes: [],\n    images: [],\n    bestSelling: false,\n    new: false,\n    instruct: \"\",\n    preserve: \"\",\n  });\n  const [imagePreviews, setImagePreviews] = useState([]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setProductForm({ ...productForm, [name]: value });\n  };\n\n  const handleImageChange = (event) => {\n    const files = Array.from(event.target.files); // Chuyển FileList thành mảng\n    setProductForm({ ...productForm, images: files }); // Lưu tất cả các tập tin vào trạng thái\n\n    const fileReaders = [];\n    let isCancel = false;\n\n    setImagePreviews([]); // Xóa các xem trước hiện tại trước khi thêm mới\n\n    files.forEach((file) => {\n      const fileReader = new FileReader();\n      fileReaders.push(fileReader);\n\n      fileReader.onload = (e) => {\n        if (isCancel) return;\n        setImagePreviews((prev) => [...prev, e.target.result]); // Thêm xem trước mới vào mảng\n      };\n      fileReader.readAsDataURL(file);\n    });\n\n    return () => {\n      isCancel = true;\n      fileReaders.forEach((fileReader) => fileReader.abort()); // Hủy bỏ các FileReader nếu component bị unmount\n    };\n  };\n\n  const handleAddSize = () => {\n    const newSize = { size: \"\", price: 0 };\n    setProductForm({ ...productForm, sizes: [...productForm.sizes, newSize] });\n  };\n\n  // Hàm xử lý thay đổi size\n  const handleChangeSize = (index, field, value) => {\n    const newSizes = productForm.sizes.map((size, idx) => {\n      if (idx === index) {\n        return { ...size, [field]: value };\n      }\n      return size;\n    });\n    setProductForm({ ...productForm, sizes: newSizes });\n  };\n\n  // Hàm xóa size\n  const handleRemoveSize = (index) => {\n    const newSizes = productForm.sizes.filter((_, idx) => idx !== index);\n    setProductForm({ ...productForm, sizes: newSizes });\n  };\n  const handleRemoveImage = (index) => {\n    setImagePreviews((currentPreviews) =>\n      currentPreviews.filter((_, i) => i !== index)\n    );\n    // Optionally remove from the file list in productForm as well\n    setProductForm((currentForm) => ({\n      ...currentForm,\n      images: currentForm.images.filter((_, i) => i !== index),\n    }));\n  };\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  const theme = useTheme();\n  const [topNotes, setTopNotes] = useState([]);\n  const [middleNotes, setMiddleNotes] = useState([]);\n  const [baseNotes, setBaseNotes] = useState([]);\n  const { id } = useParams();\n  const getDetailProduct = async () => {\n    try {\n      const response = await axios.get(\n        `https://demo-sigma.site/api/product/get/${id}`\n      );\n      const product = response.data;\n      setProductForm({\n        name: product.name,\n        category: product.category,\n        brand: product.brand,\n        collectionProduct: product.collectionProduct,\n        gender: product.gender,\n        scent: product.scent,\n        style: product.style,\n        topNotes: product.topNotes.map((note) => note._id), // Chỉ lấy ID\n        middleNotes: product.middleNotes.map((note) => note._id), // Chỉ lấy ID\n        baseNotes: product.baseNotes.map((note) => note._id), // Chỉ lấy ID\n        description: product.description,\n        year: product.year,\n        origin: product.origin,\n        discountPercent: product.discountPercent,\n        sizes: product.sizes, // Giả sử rằng sizes đã ở định dạng thích hợp\n        images: [], // Xử lý hình ảnh riêng\n        bestSelling: product.bestSelling,\n        new: product.new,\n        instruct: product.instruct,\n        preserve: product.preserve,\n      });\n\n      // Xử lý để hiển thị hình ảnh\n      setImagePreviews(\n        product.images.map((img) => `https://demo-sigma.site/${img}`)\n      );\n      setTopNotes(\n        product.topNotes.map((note) => ({\n          ...note,\n          label: note.name,\n          value: note._id,\n        }))\n      );\n      setMiddleNotes(\n        product.middleNotes.map((note) => ({\n          ...note,\n          label: note.name,\n          value: note._id,\n        }))\n      );\n      setBaseNotes(\n        product.baseNotes.map((note) => ({\n          ...note,\n          label: note.name,\n          value: note._id,\n        }))\n      );\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleFormSubmit = async () => {\n    try {\n      const formData = new FormData();\n\n      // Xử lý các trường topNotes, middleNotes, và baseNotes\n      topNotes.forEach((note) => formData.append(\"topNotes\", note._id));\n      middleNotes.forEach((note) => formData.append(\"middleNotes\", note._id));\n      baseNotes.forEach((note) => formData.append(\"baseNotes\", note._id));\n\n      // Xử lý trường sizes\n      productForm.sizes.forEach((size, index) => {\n        formData.append(`sizes[${index}][size]`, size.size);\n        formData.append(`sizes[${index}][price]`, size.price);\n      });\n\n      // Xử lý các trường và files còn lại\n      formData.append(\"name\", productForm.name);\n      formData.append(\"category\", productForm.category);\n      formData.append(\"brand\", productForm.brand);\n      formData.append(\"collectionProduct\", productForm.collectionProduct);\n      formData.append(\"gender\", productForm.gender);\n      formData.append(\"type\", productForm.type);\n      formData.append(\"scent\", productForm.scent);\n      formData.append(\"style\", productForm.style);\n      formData.append(\"description\", productForm.description);\n      formData.append(\"year\", productForm.year);\n      formData.append(\"origin\", productForm.origin);\n      formData.append(\"discountPercent\", productForm.discountPercent);\n      formData.append(\"instruct\", productForm.instruct);\n      formData.append(\"preserve\", productForm.preserve);\n\n      productForm.images.forEach((file) => {\n        formData.append(\"images\", file);\n      });\n      console.log(\"Form data:\", formData);\n      const response = await axios.patch(\n        `https://demo-sigma.site/api/product/update/${id}`,\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        setSnackbarMessage(\"Chỉnh sửa sản phẩm thành công!\");\n        setSnackbarSeverity(\"success\");\n        setSnackbarOpen(true);\n        // setTimeout(() => {\n        //   window.location.href = \"/dashboard/products\";\n        // }, 1000);\n      }\n    } catch (error) {\n      console.error(\"Error while creating product\", error);\n      setSnackbarMessage(\"Chỉnh sửa sản phẩm thất bại! \");\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  useEffect(() => {\n    getDetailProduct();\n  }, []);\n  const handleChangeTopNotes = (event) => {\n    setTopNotes(event.target.value); // assuming the select provides an array of selected values\n  };\n  const handleChangeMiddleNotes = (event) => {\n    setMiddleNotes(event.target.value); // assuming the select provides an array of selected values\n  };\n  const handleChangeBaseNotes = (event) => {\n    setBaseNotes(event.target.value); // assuming the select provides an array of selected values\n  };\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"\");\n  const instructRef = useRef(null);\n  const preserveRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const handleEditorChange = (content, editor, type) => {\n    setProductForm((prev) => ({ ...prev, [type]: content }));\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return (\n    <>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={2000}\n        onClose={handleSnackbarClose}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n      <Box sx={style}>\n        <Grid container spacing={2}>\n          {/* Product Core Information */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Tên sản phẩm\"\n              name=\"name\"\n              value={productForm.name}\n              onChange={handleChange}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Danh mục\"\n              name=\"category\"\n              value={productForm.category}\n              onChange={handleChange}\n            >\n              {state.categoryData &&\n                state.categoryData.map((option) => (\n                  <MenuItem key={option._id} value={option._id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Thương hiệu\"\n              name=\"brand\"\n              value={productForm.brand}\n              onChange={handleChange}\n            >\n              {state.brandData &&\n                state.brandData.map((option) => (\n                  <MenuItem key={option._id} value={option._id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n\n          {/* Collection and Demographic Information */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Bộ sưu tập\"\n              name=\"collectionProduct\"\n              value={productForm.collectionProduct}\n              onChange={handleChange}\n            >\n              {state.collectionData &&\n                state.collectionData.map((option) => (\n                  <MenuItem key={option._id} value={option._id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Giới tính\"\n              name=\"gender\"\n              value={productForm.gender}\n              onChange={handleChange}\n            >\n              {[\"Nam\", \"Nữ\", \"Unisex\"].map((gender) => (\n                <MenuItem key={gender} value={gender}>\n                  {gender}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Mùi hương\"\n              name=\"scent\"\n              value={productForm.scent}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          {/* Detailed Specifications */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Phong cách\"\n              name=\"style\"\n              value={productForm.style}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              name=\"year\"\n              type=\"number\"\n              value={productForm.year}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          {/* Location and Marketing Flags */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Xuất xứ\"\n              name=\"origin\"\n              value={productForm.origin}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Phần trăm giảm giá\"\n              name=\"discountPercent\"\n              type=\"number\"\n              value={productForm.discountPercent}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id=\"topNotes-label\">Hương đầu</InputLabel>\n              <Select\n                labelId=\"topNotes-label\"\n                id=\"topNotes\"\n                multiple\n                value={topNotes}\n                onChange={handleChangeTopNotes}\n                input={<OutlinedInput label=\"Hương đầu\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((item) => (\n                      <Chip key={item._id} label={item.name} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {state.fragranceNoteData &&\n                  state.fragranceNoteData.map((item) => (\n                    <MenuItem\n                      key={item._id}\n                      value={item}\n                      style={getStyles(\n                        item.name,\n                        topNotes.map((x) => x.name),\n                        theme\n                      )}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id=\"middleNotes\">Hương giữa</InputLabel>\n              <Select\n                labelId=\"middleNotes\"\n                id=\"middleNotes\"\n                multiple\n                value={middleNotes}\n                onChange={handleChangeMiddleNotes}\n                input={<OutlinedInput label=\"Hương giữa\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((item) => (\n                      <Chip key={item._id} label={item.name} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {state.fragranceNoteData &&\n                  state.fragranceNoteData.map((item) => (\n                    <MenuItem\n                      key={item._id}\n                      value={item}\n                      style={getStyles(\n                        item.name,\n                        middleNotes.map((x) => x.name),\n                        theme\n                      )}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id=\"baseNotes\">Hương giữa</InputLabel>\n              <Select\n                labelId=\"baseNotes\"\n                id=\"baseNotes\"\n                multiple\n                value={baseNotes}\n                onChange={handleChangeBaseNotes}\n                input={<OutlinedInput label=\"Hương cuối\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((item) => (\n                      <Chip key={item._id} label={item.name} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {state.fragranceNoteData &&\n                  state.fragranceNoteData.map((item) => (\n                    <MenuItem\n                      key={item._id}\n                      value={item}\n                      style={getStyles(\n                        item.name,\n                        baseNotes.map((x) => x.name),\n                        theme\n                      )}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={productForm.bestSelling}\n                  onChange={(e) =>\n                    setProductForm((prev) => ({\n                      ...prev,\n                      bestSelling: e.target.checked,\n                    }))\n                  }\n                />\n              }\n              label=\"Bán chạy nhất\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={productForm.new}\n                  onChange={(e) =>\n                    setProductForm((prev) => ({\n                      ...prev,\n                      new: e.target.checked,\n                    }))\n                  }\n                />\n              }\n              label=\"Sản phẩm mới\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\">Hướng dẫn sử dụng</Typography>\n            <Editor\n              onEditorChange={(content, editor) =>\n                handleEditorChange(content, editor, \"instruct\")\n              }\n              initialValue={productForm.instruct}\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\n              name=\"instruct\"\n              ref={instructRef}\n              init={{\n                plugins:\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\n                toolbar:\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\">Bảo quản</Typography>\n            <Editor\n              initialValue={productForm.preserve}\n              onEditorChange={(content, editor) =>\n                handleEditorChange(content, editor, \"preserve\")\n              }\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\n              ref={preserveRef}\n              name=\"preserve\"\n              init={{\n                plugins:\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\n                toolbar:\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <TextField\n              fullWidth\n              select\n              label=\"Loại\"\n              name=\"type\"\n              value={productForm.type}\n              onChange={handleChange}\n            >\n              {[\"Niche\", \"Designer\"].map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button variant=\"contained\" onClick={handleAddSize}>\n              Thêm Size\n            </Button>\n            {productForm.sizes.map((size, index) => (\n              <Grid container spacing={2} sx={{ paddingTop: 4 }} key={index}>\n                <Grid item xs={5}>\n                  <TextField\n                    fullWidth\n                    label=\"Size\"\n                    value={size.size}\n                    onChange={(e) =>\n                      handleChangeSize(index, \"size\", e.target.value)\n                    }\n                  />\n                </Grid>\n                <Grid item xs={5}>\n                  <TextField\n                    fullWidth\n                    label=\"Giá\"\n                    type=\"number\"\n                    value={size.price}\n                    onChange={(e) =>\n                      handleChangeSize(index, \"price\", e.target.value)\n                    }\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <IconButton onClick={() => handleRemoveSize(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          {/* Image Upload */}\n          <Grid item xs={12} sm={2}>\n            <label htmlFor=\"icon-button-file\">\n              Ảnh sản phẩm:\n              <input\n                class=\"input-upload-image\"\n                accept=\"image/*\"\n                id=\"icon-button-file\"\n                type=\"file\"\n                multiple\n                onChange={handleImageChange}\n              />\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                <PhotoCamera />\n              </IconButton>\n            </label>\n          </Grid>\n          <Grid sm={12} sx={{ paddingTop: 4 }}>\n            {imagePreviews.map((item, index) => (\n              <Grid container sx={{ paddingBottom: 4 }} spacing={2} key={index}>\n                <Grid item xs={10}>\n                  <img src={item} width={150} height={100} alt=\"\" />\n                </Grid>\n                <Grid item xs={2}>\n                  <IconButton onClick={() => handleRemoveImage(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h6\">Mô tả sản phẩm</Typography>\n            <Editor\n              initialValue={productForm.description}\n              name=\"description\"\n              onEditorChange={(content, editor) =>\n                handleEditorChange(content, editor, \"description\")\n              }\n              ref={descriptionRef}\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\n              init={{\n                plugins:\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\n                toolbar:\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\n              }}\n            />\n          </Grid>\n\n          {/* Save Button */}\n          <Grid item xs={12}>\n            <Button\n              onClick={handleFormSubmit}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Lưu sản phẩm\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default Edit;\n"],"names":["Edit","open","setOpen","useState","state","setState","useEffect","async","resBrand","resCategory","resCollection","resFragranceNote","Promise","all","axios","get","brandData","data","categoryData","collectionData","fragranceNoteData","error","console","getData","productForm","setProductForm","name","category","brand","collectionProduct","gender","scent","style","topNotes","middleNotes","baseNotes","description","year","origin","discountPercent","sizes","images","bestSelling","new","instruct","preserve","imagePreviews","setImagePreviews","handleChange","event","value","target","handleChangeSize","index","field","newSizes","map","size","idx","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useTheme","setTopNotes","setMiddleNotes","setBaseNotes","id","useParams","product","concat","note","_id","img","label","getDetailProduct","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","instructRef","useRef","preserveRef","descriptionRef","handleEditorChange","content","editor","type","prev","handleSnackbarClose","reason","_jsxs","_Fragment","children","_jsx","Snackbar","autoHideDuration","onClose","Alert","severity","sx","Box","p","Grid","container","spacing","item","xs","sm","TextField","fullWidth","onChange","required","select","option","MenuItem","FormControl","m","InputLabel","Select","labelId","multiple","input","OutlinedInput","renderValue","selected","display","flexWrap","gap","Chip","x","FormControlLabel","control","Switch","checked","e","Typography","variant","Editor","onEditorChange","initialValue","apiKey","ref","init","plugins","toolbar","Button","onClick","handleAddSize","price","paddingTop","IconButton","filter","_","handleRemoveSize","DeleteIcon","htmlFor","class","accept","files","Array","from","fileReaders","isCancel","forEach","file","fileReader","FileReader","push","onload","result","readAsDataURL","abort","color","component","PhotoCamera","paddingBottom","src","height","alt","currentPreviews","i","currentForm","handleRemoveImage","formData","FormData","append","log","patch","headers","status"],"sourceRoot":""}
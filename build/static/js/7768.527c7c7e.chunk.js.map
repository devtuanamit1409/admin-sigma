{"version":3,"file":"static/js/7768.527c7c7e.chunk.js","mappings":"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","sources":["app/views/dashboard/products/Add.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport {\n  Button,\n  Box,\n  Stack,\n  IconButton,\n  TextField,\n  MenuItem,\n  Input,\n  Typography,\n  Grid,\n  FormControlLabel,\n  Switch,\n  Chip,\n  Select,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  Snackbar,\n  Alert,\n} from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { Editor } from \"@tinymce/tinymce-react\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport { Label, PhotoCamera } from \"@mui/icons-material\";\nimport axios from \"axios\";\nconst Add = () => {\n  const style = {\n    p: 4,\n  };\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState({});\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const getData = async () => {\n    try {\n      // Sử dụng Promise.all để gửi các request một cách song song\n      const [resBrand, resCategory, resCollection, resFragranceNote] =\n        await Promise.all([\n          axios.get(\"https://demo-sigma.site/api/brand\"),\n          axios.get(\"https://demo-sigma.site/api/category\"),\n          axios.get(\"https://demo-sigma.site/api/collection\"),\n          axios.get(\"https://demo-sigma.site/api/fragrancenote\"),\n        ]);\n\n      // Xử lý dữ liệu sau khi tất cả các request đã hoàn thành\n      const brandData = resBrand.data;\n      const categoryData = resCategory.data;\n      const collectionData = resCollection.data;\n      const fragranceNoteData = resFragranceNote.data;\n\n      // Set các dữ liệu state cùng lúc\n      // Ví dụ:\n      setState({\n        brandData,\n        categoryData,\n        collectionData,\n        fragranceNoteData,\n      });\n    } catch (error) {\n      // Xử lý lỗi nếu có\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const [productForm, setProductForm] = useState({\n    name: \"\",\n    category: \"\",\n    brand: \"\",\n    collectionProduct: \"\",\n    gender: \"\",\n    scent: \"\",\n    style: \"\",\n    topNotes: [],\n    middleNotes: [],\n    baseNotes: [],\n    description: \"\",\n    year: \"\",\n    origin: \"\",\n    discountPercent: 0,\n    sizes: [],\n    images: [],\n    bestSelling: false,\n    new: false,\n    instruct: \"\",\n    preserve: \"\",\n  });\n  const [imagePreviews, setImagePreviews] = useState([]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setProductForm({ ...productForm, [name]: value });\n  };\n\n  const handleImageChange = (event) => {\n    const files = Array.from(event.target.files); // Chuyển FileList thành mảng\n    setProductForm({ ...productForm, images: files }); // Lưu tất cả các tập tin vào trạng thái\n\n    const fileReaders = [];\n    let isCancel = false;\n\n    setImagePreviews([]); // Xóa các xem trước hiện tại trước khi thêm mới\n\n    files.forEach((file) => {\n      const fileReader = new FileReader();\n      fileReaders.push(fileReader);\n\n      fileReader.onload = (e) => {\n        if (isCancel) return;\n        setImagePreviews((prev) => [...prev, e.target.result]); // Thêm xem trước mới vào mảng\n      };\n      fileReader.readAsDataURL(file);\n    });\n\n    return () => {\n      isCancel = true;\n      fileReaders.forEach((fileReader) => fileReader.abort()); // Hủy bỏ các FileReader nếu component bị unmount\n    };\n  };\n\n  const handleFormSubmit = async () => {\n    try {\n      const formData = new FormData();\n\n      // Xử lý các trường topNotes, middleNotes, và baseNotes\n      topNotes.forEach((note) => formData.append(\"topNotes\", note._id));\n      middleNotes.forEach((note) => formData.append(\"middleNotes\", note._id));\n      baseNotes.forEach((note) => formData.append(\"baseNotes\", note._id));\n\n      // Xử lý trường sizes\n      productForm.sizes.forEach((size, index) => {\n        formData.append(`sizes[${index}][size]`, size.size);\n        formData.append(`sizes[${index}][price]`, size.price);\n      });\n\n      // Xử lý các trường và files còn lại\n      formData.append(\"name\", productForm.name);\n      formData.append(\"category\", productForm.category);\n      formData.append(\"brand\", productForm.brand);\n      formData.append(\"collectionProduct\", productForm.collectionProduct);\n      formData.append(\"gender\", productForm.gender);\n      formData.append(\"type\", productForm.type);\n      formData.append(\"scent\", productForm.scent);\n      formData.append(\"style\", productForm.style);\n      formData.append(\"description\", productForm.description);\n      formData.append(\"year\", productForm.year);\n      formData.append(\"origin\", productForm.origin);\n      formData.append(\"discountPercent\", productForm.discountPercent);\n      formData.append(\"instruct\", productForm.instruct);\n      formData.append(\"preserve\", productForm.preserve);\n\n      productForm.images.forEach((file) => {\n        formData.append(\"images\", file);\n      });\n\n      const response = await axios.post(\n        \"https://demo-sigma.site/api/product/create\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        setSnackbarMessage(\"Thêm sản phẩm thành công!\");\n        setSnackbarSeverity(\"success\");\n        setSnackbarOpen(true);\n        setTimeout(() => {\n          window.location.href = \"/dashboard/products\";\n        }, 1000);\n      }\n    } catch (error) {\n      console.error(\"Error while creating product\", error);\n      setSnackbarMessage(\"Thêm sản phẩm thất bại! \");\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    }\n  };\n\n  const handleAddSize = () => {\n    const newSize = { size: \"\", price: 0 };\n    setProductForm({ ...productForm, sizes: [...productForm.sizes, newSize] });\n  };\n\n  // Hàm xử lý thay đổi size\n  const handleChangeSize = (index, field, value) => {\n    const newSizes = productForm.sizes.map((size, idx) => {\n      if (idx === index) {\n        return { ...size, [field]: value };\n      }\n      return size;\n    });\n    setProductForm({ ...productForm, sizes: newSizes });\n  };\n\n  // Hàm xóa size\n  const handleRemoveSize = (index) => {\n    const newSizes = productForm.sizes.filter((_, idx) => idx !== index);\n    setProductForm({ ...productForm, sizes: newSizes });\n  };\n  const handleRemoveImage = (index) => {\n    setImagePreviews((currentPreviews) =>\n      currentPreviews.filter((_, i) => i !== index)\n    );\n    // Optionally remove from the file list in productForm as well\n    setProductForm((currentForm) => ({\n      ...currentForm,\n      images: currentForm.images.filter((_, i) => i !== index),\n    }));\n  };\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  const theme = useTheme();\n  const [topNotes, setTopNotes] = useState([]);\n  const [middleNotes, setMiddleNotes] = useState([]);\n  const [baseNotes, setBaseNotes] = useState([]);\n\n  const handleChangeTopNotes = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setTopNotes(typeof value === \"string\" ? value.split(\",\") : value);\n  };\n  const handleChangeMiddleNotes = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setMiddleNotes(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n  const handleChangeBaseNotes = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setBaseNotes(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"\");\n  const instructRef = useRef(null);\n  const preserveRef = useRef(null);\n  const descriptionRef = useRef(null);\n  const handleEditorChange = (content, editor, type) => {\n    setProductForm((prev) => ({ ...prev, [type]: content }));\n  };\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return (\n    <>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={2000}\n        onClose={handleSnackbarClose}\n      >\n        <Alert\n          onClose={handleSnackbarClose}\n          severity={snackbarSeverity}\n          sx={{ width: \"100%\" }}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n      <Box sx={style}>\n        <Grid container spacing={2}>\n          {/* Product Core Information */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Tên sản phẩm\"\n              name=\"name\"\n              value={productForm.name}\n              onChange={handleChange}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Danh mục\"\n              name=\"category\"\n              value={productForm.category}\n              onChange={handleChange}\n            >\n              {state.categoryData &&\n                state.categoryData.map((option) => (\n                  <MenuItem key={option._id} value={option._id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Thương hiệu\"\n              name=\"brand\"\n              value={productForm.brand}\n              onChange={handleChange}\n            >\n              {state.brandData &&\n                state.brandData.map((option) => (\n                  <MenuItem key={option._id} value={option._id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n\n          {/* Collection and Demographic Information */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Bộ sưu tập\"\n              name=\"collectionProduct\"\n              value={productForm.collectionProduct}\n              onChange={handleChange}\n            >\n              {state.collectionData &&\n                state.collectionData.map((option) => (\n                  <MenuItem key={option._id} value={option._id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              select\n              label=\"Giới tính\"\n              name=\"gender\"\n              value={productForm.gender}\n              onChange={handleChange}\n            >\n              {[\"Nam\", \"Nữ\", \"Unisex\"].map((gender) => (\n                <MenuItem key={gender} value={gender}>\n                  {gender}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Mùi hương\"\n              name=\"scent\"\n              value={productForm.scent}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          {/* Detailed Specifications */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Phong cách\"\n              name=\"style\"\n              value={productForm.style}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Năm\"\n              name=\"year\"\n              type=\"number\"\n              value={productForm.year}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          {/* Location and Marketing Flags */}\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Xuất xứ\"\n              name=\"origin\"\n              value={productForm.origin}\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <TextField\n              fullWidth\n              label=\"Phần trăm giảm giá\"\n              name=\"discountPercent\"\n              type=\"number\"\n              value={productForm.discountPercent}\n              onChange={handleChange}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id=\"topNotes-label\">Hương đầu</InputLabel>\n              <Select\n                labelId=\"topNotes-label\"\n                id=\"topNotes\"\n                multiple\n                value={topNotes}\n                onChange={handleChangeTopNotes}\n                input={<OutlinedInput label=\"Hương đầu\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((item) => (\n                      <Chip key={item._id} label={item.name} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {state.fragranceNoteData &&\n                  state.fragranceNoteData.map((item) => (\n                    <MenuItem\n                      key={item._id}\n                      value={item}\n                      style={getStyles(\n                        item.name,\n                        topNotes.map((x) => x.name),\n                        theme\n                      )}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id=\"middleNotes\">Hương giữa</InputLabel>\n              <Select\n                labelId=\"middleNotes\"\n                id=\"middleNotes\"\n                multiple\n                value={middleNotes}\n                onChange={handleChangeMiddleNotes}\n                input={<OutlinedInput label=\"Hương giữa\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((item) => (\n                      <Chip key={item._id} label={item.name} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {state.fragranceNoteData &&\n                  state.fragranceNoteData.map((item) => (\n                    <MenuItem\n                      key={item._id}\n                      value={item}\n                      style={getStyles(\n                        item.name,\n                        middleNotes.map((x) => x.name),\n                        theme\n                      )}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <FormControl sx={{ m: 1, width: 300 }}>\n              <InputLabel id=\"baseNotes\">Hương giữa</InputLabel>\n              <Select\n                labelId=\"baseNotes\"\n                id=\"baseNotes\"\n                multiple\n                value={baseNotes}\n                onChange={handleChangeBaseNotes}\n                input={<OutlinedInput label=\"Hương cuối\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n                    {selected.map((item) => (\n                      <Chip key={item._id} label={item.name} />\n                    ))}\n                  </Box>\n                )}\n                MenuProps={MenuProps}\n              >\n                {state.fragranceNoteData &&\n                  state.fragranceNoteData.map((item) => (\n                    <MenuItem\n                      key={item._id}\n                      value={item}\n                      style={getStyles(\n                        item.name,\n                        baseNotes.map((x) => x.name),\n                        theme\n                      )}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={productForm.bestSelling}\n                  onChange={(e) =>\n                    setProductForm((prev) => ({\n                      ...prev,\n                      bestSelling: e.target.checked,\n                    }))\n                  }\n                />\n              }\n              label=\"Bán chạy nhất\"\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={4}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={productForm.new}\n                  onChange={(e) =>\n                    setProductForm((prev) => ({\n                      ...prev,\n                      new: e.target.checked,\n                    }))\n                  }\n                />\n              }\n              label=\"Sản phẩm mới\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\">Hướng dẫn sử dụng</Typography>\n            <Editor\n              onEditorChange={(content, editor) =>\n                handleEditorChange(content, editor, \"instruct\")\n              }\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\n              name=\"instruct\"\n              ref={instructRef}\n              init={{\n                plugins:\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\n                toolbar:\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h6\">Bảo quản</Typography>\n            <Editor\n              onEditorChange={(content, editor) =>\n                handleEditorChange(content, editor, \"preserve\")\n              }\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\n              ref={preserveRef}\n              name=\"preserve\"\n              init={{\n                plugins:\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\n                toolbar:\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n            <TextField\n              fullWidth\n              select\n              label=\"Loại\"\n              name=\"type\"\n              value={productForm.type}\n              onChange={handleChange}\n            >\n              {[\"Niche\", \"Designer\"].map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button variant=\"contained\" onClick={handleAddSize}>\n              Thêm Size\n            </Button>\n            {productForm.sizes.map((size, index) => (\n              <Grid container spacing={2} sx={{ paddingTop: 4 }} key={index}>\n                <Grid item xs={5}>\n                  <TextField\n                    fullWidth\n                    label=\"Size\"\n                    value={size.size}\n                    onChange={(e) =>\n                      handleChangeSize(index, \"size\", e.target.value)\n                    }\n                  />\n                </Grid>\n                <Grid item xs={5}>\n                  <TextField\n                    fullWidth\n                    label=\"Giá\"\n                    type=\"number\"\n                    value={size.price}\n                    onChange={(e) =>\n                      handleChangeSize(index, \"price\", e.target.value)\n                    }\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <IconButton onClick={() => handleRemoveSize(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          {/* Image Upload */}\n          <Grid item xs={12} sm={2}>\n            <label htmlFor=\"icon-button-file\">\n              Ảnh sản phẩm:\n              <input\n                class=\"input-upload-image\"\n                accept=\"image/*\"\n                id=\"icon-button-file\"\n                type=\"file\"\n                multiple\n                onChange={handleImageChange}\n              />\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                <PhotoCamera />\n              </IconButton>\n            </label>\n          </Grid>\n          <Grid sm={12} sx={{ paddingTop: 4 }}>\n            {imagePreviews.map((item, index) => (\n              <Grid container sx={{ paddingBottom: 4 }} spacing={2} key={index}>\n                <Grid item xs={10}>\n                  <img src={item} width={150} height={100} alt=\"\" />\n                </Grid>\n                <Grid item xs={2}>\n                  <IconButton onClick={() => handleRemoveImage(index)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            ))}\n          </Grid>\n\n          <Grid item xs={12} sm={12}>\n            <Typography variant=\"h6\">Mô tả sản phẩm</Typography>\n            <Editor\n              name=\"description\"\n              onEditorChange={(content, editor) =>\n                handleEditorChange(content, editor, \"description\")\n              }\n              ref={descriptionRef}\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\n              init={{\n                plugins:\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\n                toolbar:\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\n              }}\n            />\n          </Grid>\n\n          {/* Save Button */}\n          <Grid item xs={12}>\n            <Button\n              onClick={handleFormSubmit}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Lưu sản phẩm\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default Add;\n"],"names":["Add","open","setOpen","useState","state","setState","useEffect","async","resBrand","resCategory","resCollection","resFragranceNote","Promise","all","axios","get","brandData","data","categoryData","collectionData","fragranceNoteData","error","console","getData","productForm","setProductForm","name","category","brand","collectionProduct","gender","scent","style","topNotes","middleNotes","baseNotes","description","year","origin","discountPercent","sizes","images","bestSelling","new","instruct","preserve","imagePreviews","setImagePreviews","handleChange","event","value","target","handleChangeSize","index","field","newSizes","map","size","idx","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useTheme","setTopNotes","setMiddleNotes","setBaseNotes","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","instructRef","useRef","preserveRef","descriptionRef","handleEditorChange","content","editor","type","prev","handleSnackbarClose","reason","_jsxs","_Fragment","children","_jsx","Snackbar","autoHideDuration","onClose","Alert","severity","sx","Box","p","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","onChange","required","select","option","MenuItem","_id","FormControl","m","InputLabel","id","Select","labelId","multiple","split","input","OutlinedInput","renderValue","selected","display","flexWrap","gap","Chip","x","FormControlLabel","control","Switch","checked","e","Typography","variant","Editor","onEditorChange","apiKey","ref","init","plugins","toolbar","Button","onClick","handleAddSize","price","paddingTop","IconButton","filter","_","handleRemoveSize","DeleteIcon","htmlFor","class","accept","files","Array","from","fileReaders","isCancel","forEach","file","fileReader","FileReader","push","onload","result","readAsDataURL","abort","color","component","PhotoCamera","paddingBottom","src","height","alt","currentPreviews","i","currentForm","handleRemoveImage","formData","FormData","note","append","concat","post","headers","status","setTimeout","window","location","href"],"sourceRoot":""}
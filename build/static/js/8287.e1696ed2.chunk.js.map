{"version":3,"file":"static/js/8287.e1696ed2.chunk.js","mappings":"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","sources":["app/views/dashboard/news/add.js"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { PhotoCamera } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport { useState } from \"react\";\r\nconst add = () => {\r\n  const style = {\r\n    p: 4,\r\n  };\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [describe, setDescribe] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const handleSavePost = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"author\", author);\r\n    formData.append(\"describe\", describe);\r\n    formData.append(\"content\", content);\r\n    if (imageFile) {\r\n      formData.append(\"image\", imageFile);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"https://demo-sigma.site/api/news/create\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {},\r\n      });\r\n      const data = await response.json();\r\n      if (response.status === 201) {\r\n        console.log(\"Success:\", data);\r\n        alert(\"News created successfully!\");\r\n        window.location.href = \"/dashboard/news\";\r\n      } else {\r\n        throw new Error(data.message || \"Error creating news\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Box sx={style}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Tiêu đề\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              name=\"title\"\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <TextField\r\n              fullWidth\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n              label=\"Tác giả\"\r\n              name=\"author\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Mô tả\"\r\n              value={describe}\r\n              onChange={(e) => setDescribe(e.target.value)}\r\n              name=\"describe\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2}>\r\n            <label htmlFor=\"icon-button-file\">\r\n              Ảnh đại diện:\r\n              <input\r\n                className=\"input-upload-image\"\r\n                accept=\"image/*\"\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                name=\"image\"\r\n                onChange={handleImageChange}\r\n              />\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n              >\r\n                <PhotoCamera />\r\n              </IconButton>\r\n            </label>\r\n          </Grid>\r\n          {imagePreview && (\r\n            <Grid item xs={12} sm={4}>\r\n              <img\r\n                src={imagePreview}\r\n                alt=\"Preview\"\r\n                style={{ width: \"100%\", height: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12} sm={12}>\r\n            <Typography variant=\"h6\">Nội dung bài viết</Typography>\r\n            <Editor\r\n              value={content}\r\n              onEditorChange={(content, editor) => setContent(content)}\r\n              name=\"description\"\r\n              apiKey=\"5uqva5k7lt0qxlfbezptki5oskz2grzrz3kbiwvsw0kr3vhu\"\r\n              init={{\r\n                plugins:\r\n                  \"anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount linkchecker\",\r\n                toolbar:\r\n                  \"undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table | align lineheight | numlist bullist indent outdent | emoticons charmap | removeformat\",\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleSavePost()}\r\n            >\r\n              Lưu bài viết\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default add;\r\n"],"names":["add","imagePreview","setImagePreview","useState","title","setTitle","author","setAuthor","describe","setDescribe","content","setContent","imageFile","setImageFile","_jsx","_Fragment","children","Box","sx","p","_jsxs","Grid","container","spacing","item","xs","sm","TextField","fullWidth","label","value","onChange","e","target","name","required","htmlFor","className","accept","id","type","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","IconButton","color","component","PhotoCamera","src","alt","style","width","height","Typography","variant","Editor","onEditorChange","editor","apiKey","init","plugins","toolbar","Button","onClick","async","formData","FormData","append","response","fetch","method","body","headers","data","json","status","Error","message","console","log","alert","window","location","href","error","handleSavePost"],"sourceRoot":""}